- name: "Include global variables"
  include_vars: "group_vars/all.yaml"

- name: "apt-key dependencies "
  apt:
    name:
    - apt-transport-https
    - curl
    - python-simplejson
    - lsb-release
    - software-properties-common
    - aptitude

- name: "apt-key for chrome"
  apt_key:
    url: 'https://dl.google.com/linux/linux_signing_key.pub'

- name: "Adds apt repository for chrome"
  apt_repository:
    repo: 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main'
    state: present
    filename: 'google-chrome'

- name: "apt-key for docker"
  apt_key:
    url: 'https://download.docker.com/linux/ubuntu/gpg'
    id: '9DC858229FC7DD38854AE2D88D81803C0EBFCD88'
    state: present

- name: "Query linux code name"
  shell: lsb_release -cs | xargs
  register: code_name
  changed_when: False

- name: "Adds apt repository for docker"
  apt_repository:
    repo: 'deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ code_name.stdout }} stable'
    state: present

- name: "apt-key for nodejs"
  apt_key:
    url: 'https://deb.nodesource.com/gpgkey/nodesource.gpg.key'
    id: '68576280'

- name: "Adds apt repository for nodejs"
  apt_repository:
    repo: 'deb https://deb.nodesource.com/node_8.x {{ code_name.stdout }} main'
    state: present

- name: "PPA for emacs"
  apt_repository:
    repo: 'ppa:kelleyk/emacs'

- name: "PPA for nvidia drivers"
  apt_repository:
    repo: 'ppa:graphics-drivers/ppa'

- name: "prepare update"
  apt:
    pkg: aptitude
    state: latest
    update_cache: no
    cache_valid_time: 3600

- name: "apt update"
  shell: apt update
  become: yes
  become_user: root
  ignore_errors: yes

- name: "apt upgrade "
  apt:
    upgrade: safe

- name: "apt dist-upgrade "
  apt:
    upgrade: 'dist'

- name: "apt install packages"
  apt:
    state: latest
    name:
    - emacs25
    - terminator
    - texlive
    - zsh
    - tree
    - python3-pip
    - python-pygments
    - google-chrome-stable
    - tig
    - httpie
    - kdiff3
    - xclip
    - linux-image-extra-virtual
    - ca-certificates
    - nodejs
    - docker-ce
    - libglib2.0-bin
    - ssmtp
    - cowsay
    - parcellite
    - pycharm
    - xdot
    - taskwarrior
    - direnv
    - libsqlite0
    - libsqlite0-dev
    - libsqlite3-0
    - libsqlite3-dev
    - xsel

- name: "npm install"
  npm:
    name: "{{ item }}"
    global: yes
  with_items:
    - git-standup
    - tiny-care-terminal

- name: "Install virtualenv"
  shell: python3 -m pip install virtualenv
  args:
    creates: /usr/local/bin/virtualenv

- name: "Install virtualenv"
  shell: python3 -m pip install virtualenvwrapper
  args:
    creates: /usr/local/bin/virtualenvwrapper.sh
